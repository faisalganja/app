name: Deploy to ECS

on:
  push:
    branches:
      - dev-2  # Trigger workflow on pushes to the dev-2 branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout code from the dev-2 branch
      - name: Checkout
        uses: actions/checkout@v4

      # Configure AWS credentials
      - name: AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1  # Replace with your region

      # Log in to Amazon ECR
      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # Build and push Docker image to ECR
      - name: Build and Push Docker Image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}  # ECR registry URL
          ECR_REPOSITORY: nodeapp  # Name of the ECR repository
          IMAGE_TAG: dev-2  # Use a specific tag (e.g., dev-2)
        run: |
          # Print the image reference for debugging
          echo "Image reference: $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

          # Build the Docker image
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .

          # Push the Docker image to ECR
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      # Register new task definition and update ECS service
      - name: Deploy to ECS
        env:
          TASK_DEFINITION: nodeapp-2  # Name of your ECS task definition family
          CLUSTER_NAME: nodeapp       # Name of your ECS cluster
          SERVICE_NAME: nodeapp-2     # Name of your ECS service
          ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}  # AWS account ID
        run: |
          # Register new task definition
          NEW_TASK_DEF_ARN=$(aws ecs register-task-definition \
              --family $TASK_DEFINITION \
              --container-definitions '[{
                  "name": "nodeapp",
                  "image": "'"$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"'",
                  "memory": 512,
                  "cpu": 256,
                  "essential": true
              }]' \
              --requires-compatibilities FARGATE \
              --network-mode awsvpc \
              --cpu "256" \
              --memory "512" \
              --execution-role-arn "arn:aws:iam::$ACCOUNT_ID:role/ecsTaskExecutionRole" \
              --query 'taskDefinition.taskDefinitionArn' \
              --output text)

          # Update ECS service to use the new task definition
          aws ecs update-service \
              --cluster $CLUSTER_NAME \
              --service $SERVICE_NAME \
              --task-definition $NEW_TASK_DEF_ARN \
              --force-new-deployment